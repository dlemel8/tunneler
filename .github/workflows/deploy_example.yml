name: Deploy an example server using Terraform

on:
  workflow_dispatch:
    inputs:
      exampleName:
        description: 'Example Name'
        required: true
        default: 'speed_test'

env:
  TF_VAR_LINODE_API_TOKEN: ${{ secrets.LINODE_API_TOKEN }}
  TF_VAR_LINODE_PUBLIC_SSH_KEY: ${{ secrets.LINODE_PUBLIC_SSH_KEY }}
  TF_VAR_LINODE_ROOT_PASSWORD: ${{ secrets.LINODE_ROOT_PASSWORD }}

jobs:
  plan-infra-deployment:
    runs-on: ubuntu-latest
    outputs:
      tfplan: ${{ steps.plan.outputs.tfplan }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.4
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}

      - name: Terraform plan
        id: plan
        run: |
          terraform init
          terraform plan -out=./tfplan
          echo ::set-output name=tfplan::$(cat ./tfplan)
        working-directory: examples/${{ github.event.inputs.exampleName }}

  apply-infra-deployment:
    runs-on: ubuntu-latest
    environment: Example
    needs: [ plan-infra-deployment ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.4
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}

      - name: Terraform apply
        run: |
          terraform init
          echo ${{needs.plan-infra-deployment.outputs.tfplan}} > ./tfplan
          terraform apply ./tfplan
        working-directory: examples/${{ github.event.inputs.exampleName }}
